{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\delfo\\\\OneDrive\\\\Bureau\\\\Konexio\\\\digitous-react-native\\\\list\\\\components\\\\List.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { log } from 'async';\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport WeatherApi from \"./WeatherApi\";\nexport function List() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      countries = _useState2[0],\n      setCountries = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      weatherCapital = _useState4[0],\n      setWeatherCapital = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isShown = _useState6[0],\n      setIsShown = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      capitalSelected = _useState8[0],\n      setCapitalSelected = _useState8[1];\n\n  useEffect(function () {\n    var getCountries = function getCountries() {\n      var res, data;\n      return _regeneratorRuntime.async(function getCountries$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"http://restcountries.eu/rest/v2/all\"));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 5:\n              data = _context.sent;\n              setCountries(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getCountries();\n\n    if (countries.capital === capitalSelected) {\n      console.log('country selected3', capitalSelected);\n    }\n\n    console.log('country selected2', capitalSelected);\n    console.log('weather', weatherCapital);\n  }, [isShown]);\n\n  var capitalWeather = function capitalWeather(item) {\n    var capitalInformation;\n    return _regeneratorRuntime.async(function capitalWeather$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log('country capital', item.capital);\n            console.log('country selected1', capitalSelected);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(WeatherApi(item.capital));\n\n          case 4:\n            capitalInformation = _context2.sent;\n            console.log('capital information', capitalInformation);\n\n            if (capitalInformation.message) {\n              alert(\"sorry, retry a bit later !\");\n            } else {\n              setWeatherCapital(capitalInformation.weather[0].main);\n            }\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handlePress = function handlePress(item) {\n    setCapitalSelected(item.capital);\n    console.log(\"you hit me !\");\n    capitalWeather(item);\n    Alert.alert(\"you hit me !\");\n    setIsShown(!isShown);\n  };\n\n  var renderCountry = function renderCountry(_ref) {\n    var item = _ref.item;\n    return React.createElement(View, {\n      style: styles.dataCountrie,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, item.name), React.createElement(View, {\n      style: styles.dataCapital,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, isShown && capitalSelected === item.capital && React.createElement(React.Fragment, null, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, item.capital), React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, \"-\"), React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, weatherCapital))), React.createElement(TouchableOpacity, {\n      capital: item.capital,\n      onPress: function onPress() {\n        return handlePress(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      style: styles.countryFlag,\n      source: {\n        uri: item.flag\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    })));\n  };\n\n  return React.createElement(FlatList, {\n    style: styles.list,\n    data: countries,\n    renderItem: renderCountry,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  list: {\n    margin: 10\n  },\n  text: {\n    marginHorizontal: 5\n  },\n  dataCountrie: {\n    marginVertical: 10\n  },\n  dataCapital: {\n    flexDirection: \"row\"\n  },\n  countryFlag: {\n    height: 50,\n    width: 100\n  }\n});","map":{"version":3,"sources":["C:/Users/delfo/OneDrive/Bureau/Konexio/digitous-react-native/list/components/List.js"],"names":["log","React","useEffect","useState","WeatherApi","List","countries","setCountries","weatherCapital","setWeatherCapital","isShown","setIsShown","capitalSelected","setCapitalSelected","getCountries","fetch","res","json","data","capital","console","capitalWeather","item","capitalInformation","message","alert","weather","main","handlePress","Alert","renderCountry","styles","dataCountrie","name","dataCapital","text","countryFlag","uri","flag","list","index","toString","StyleSheet","create","margin","marginHorizontal","marginVertical","flexDirection","height","width"],"mappings":"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","sourcesContent":["import { log } from 'async';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { FlatList, Text, StyleSheet, Image, View, Alert, TouchableOpacity } from 'react-native';\r\nimport WeatherApi from './WeatherApi';\r\n\r\nexport function List() {\r\n    const [countries, setCountries] = useState([])\r\n    const [weatherCapital, setWeatherCapital] = useState([])\r\n    const [isShown, setIsShown] = useState(false)\r\n    const [capitalSelected, setCapitalSelected] = useState(\"\")\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        const getCountries = async() =>{\r\n            const res = await fetch(\"http://restcountries.eu/rest/v2/all\");\r\n            const data = await res.json();\r\n            setCountries(data)\r\n\r\n            \r\n        }\r\n        getCountries();\r\n        \r\n        if (countries.capital === capitalSelected){\r\n            console.log('country selected3' , capitalSelected);\r\n        }\r\n        console.log('country selected2' , capitalSelected);\r\n        console.log('weather' , weatherCapital);\r\n\r\n    },[isShown])\r\n    \r\n\r\n    const capitalWeather = async(item) => {\r\n            console.log('country capital' , item.capital);\r\n            console.log('country selected1' , capitalSelected);\r\n            const capitalInformation = await WeatherApi(item.capital);\r\n                console.log('capital information' , capitalInformation);\r\n            if (capitalInformation.message) {\r\n                alert(\"sorry, retry a bit later !\")\r\n            } else {\r\n                setWeatherCapital(capitalInformation.weather[0].main)\r\n            }\r\n\r\n    }\r\n\r\n    const handlePress = (item) =>{\r\n        setCapitalSelected(item.capital)\r\n        console.log(\"you hit me !\")\r\n        capitalWeather(item)\r\n        Alert.alert(\"you hit me !\")\r\n        setIsShown(!isShown)\r\n    };\r\n    \r\n    const renderCountry = ({item}) =>{ \r\n        \r\n        return (\r\n            <View style={styles.dataCountrie}>\r\n                <Text>{item.name}</Text>\r\n                <View style={styles.dataCapital}>\r\n                    {(isShown && capitalSelected === item.capital) && <>\r\n                        <Text style={styles.text}>{item.capital}</Text>\r\n                        <Text style={styles.text}>-</Text>\r\n                        <Text style={styles.text}>{weatherCapital}</Text>\r\n                    </>}\r\n                </View>\r\n                <TouchableOpacity capital={item.capital} onPress={() => handlePress(item)}>\r\n                    <Image style={styles.countryFlag} source={{uri: item.flag}} />\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <FlatList style={styles.list} data={countries} renderItem={renderCountry} keyExtractor={(item, index)=> index.toString()}/>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    list:{\r\n        margin: 10,\r\n    },\r\n    text:{\r\n        marginHorizontal: 5,\r\n    },\r\n    dataCountrie:{\r\n        marginVertical: 10,\r\n    },\r\n    dataCapital:{\r\n       flexDirection: \"row\" ,\r\n    },\r\n    countryFlag:{\r\n        height: 50,\r\n        width: 100,\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}