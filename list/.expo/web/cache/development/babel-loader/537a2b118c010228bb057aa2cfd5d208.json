{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\delfo\\\\OneDrive\\\\Bureau\\\\Konexio\\\\digitous-react-native\\\\list\\\\components\\\\List.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nexport function List() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      countries = _useState2[0],\n      setCountries = _useState2[1];\n\n  useEffect(function () {\n    var getCountries = function getCountries() {\n      var res, data;\n      return _regeneratorRuntime.async(function getCountries$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"http://restcountries.eu/rest/v2/all\"));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 5:\n              data = _context.sent;\n              setCountries(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getCountries();\n  }, []);\n\n  var handlePress = function handlePress() {\n    console.log(\"you hit me !\");\n    Alert.alert(\"you hit me !\");\n  };\n\n  var renderCountrie = function renderCountrie(_ref) {\n    var item = _ref.item;\n    return React.createElement(View, {\n      style: styles.dataCountrie,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, item.name), React.createElement(View, {\n      style: styles.dataCapital,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, item.capital), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, item.capital)), React.createElement(TouchableOpacity, {\n      onPress: handlePress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      style: styles.countryFlag,\n      source: {\n        uri: item.flag\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    })));\n  };\n\n  return React.createElement(FlatList, {\n    style: styles.list,\n    data: countries,\n    renderItem: renderCountrie,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  list: {\n    margin: 10\n  },\n  dataCountrie: {\n    marginVertical: 10\n  },\n  dataCapital: {\n    flexDirection: \"row\"\n  },\n  countryFlag: {\n    height: 50,\n    width: 100\n  }\n});","map":{"version":3,"sources":["C:/Users/delfo/OneDrive/Bureau/Konexio/digitous-react-native/list/components/List.js"],"names":["React","useEffect","useState","List","countries","setCountries","getCountries","fetch","res","json","data","handlePress","console","log","Alert","alert","renderCountrie","item","styles","dataCountrie","name","dataCapital","capital","countryFlag","uri","flag","list","index","toString","StyleSheet","create","margin","marginVertical","flexDirection","height","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;AAGA,OAAO,SAASC,IAAT,GAAgB;AAAA;;AACnB,kBAAkCD,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOE,SAAP;AAAA,MAAkBC,YAAlB;;AAGAJ,EAAAA,SAAS,CAAC,YAAI;AAEV,QAAMK,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACCC,KAAK,CAAC,qCAAD,CADN;;AAAA;AACXC,cAAAA,GADW;AAAA;AAAA,+CAEEA,GAAG,CAACC,IAAJ,EAFF;;AAAA;AAEXC,cAAAA,IAFW;AAGjBL,cAAAA,YAAY,CAACK,IAAD,CAAZ;;AAHiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArB;;AAOAJ,IAAAA,YAAY;AAEf,GAXQ,EAWP,EAXO,CAAT;;AAaA,MAAMK,WAAW,GAAG,SAAdA,WAAc,GAAK;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAC,IAAAA,KAAK,CAACC,KAAN,CAAY,cAAZ;AACH,GAHD;;AAKA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAW;AAAA,QAATC,IAAS,QAATA,IAAS;AAC9B,WACA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,IAAI,CAACG,IAAZ,CADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOJ,IAAI,CAACK,OAAZ,CADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOL,IAAI,CAACK,OAAZ,CAFJ,CAFJ,EAMI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAEX,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEO,MAAM,CAACK,WAArB;AAAkC,MAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAEP,IAAI,CAACQ;AAAX,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,CADA;AAYH,GAbD;;AAeA,SACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEP,MAAM,CAACQ,IAAxB;AAA8B,IAAA,IAAI,EAAEtB,SAApC;AAA+C,IAAA,UAAU,EAAEY,cAA3D;AAA2E,IAAA,YAAY,EAAE,sBAACC,IAAD,EAAOU,KAAP;AAAA,aAAgBA,KAAK,CAACC,QAAN,EAAhB;AAAA,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH;AAED,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,IAAI,EAAC;AACDK,IAAAA,MAAM,EAAE;AADP,GADwB;AAI7BZ,EAAAA,YAAY,EAAC;AACTa,IAAAA,cAAc,EAAE;AADP,GAJgB;AAO7BX,EAAAA,WAAW,EAAC;AACTY,IAAAA,aAAa,EAAE;AADN,GAPiB;AAU7BV,EAAAA,WAAW,EAAC;AACRW,IAAAA,MAAM,EAAE,EADA;AAERC,IAAAA,KAAK,EAAE;AAFC;AAViB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { FlatList, Text, StyleSheet, Image, View, Alert, TouchableOpacity } from 'react-native';\r\n\r\nexport function List() {\r\n    const [countries, setCountries] = useState([])\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        const getCountries = async() =>{\r\n            const res = await fetch(\"http://restcountries.eu/rest/v2/all\");\r\n            const data = await res.json();\r\n            setCountries(data)\r\n\r\n            \r\n        }\r\n        getCountries();\r\n        \r\n    },[])\r\n    \r\n    const handlePress = () =>{\r\n        console.log(\"you hit me !\")\r\n        Alert.alert(\"you hit me !\")\r\n    };\r\n\r\n    const renderCountrie = ({item}) =>{ \r\n        return (\r\n        <View style={styles.dataCountrie}>\r\n            <Text>{item.name}</Text>\r\n            <View style={styles.dataCapital}>\r\n                <Text>{item.capital}</Text>\r\n                <Text>{item.capital}</Text>\r\n            </View>\r\n            <TouchableOpacity onPress={handlePress}>\r\n                <Image style={styles.countryFlag} source={{uri: item.flag}} />\r\n            </TouchableOpacity>\r\n\r\n        </View>)\r\n    }\r\n\r\n    return (\r\n        <FlatList style={styles.list} data={countries} renderItem={renderCountrie} keyExtractor={(item, index)=> index.toString()}/>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    list:{\r\n        margin: 10,\r\n    },\r\n    dataCountrie:{\r\n        marginVertical: 10,\r\n    },\r\n    dataCapital:{\r\n       flexDirection: \"row\" \r\n    },\r\n    countryFlag:{\r\n        height: 50,\r\n        width: 100,\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}