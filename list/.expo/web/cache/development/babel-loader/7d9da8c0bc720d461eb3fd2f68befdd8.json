{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\delfo\\\\OneDrive\\\\Bureau\\\\Konexio\\\\digitous-react-native\\\\list\\\\components\\\\List.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { log } from 'async';\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Weatherapi from \"./WeatherApi\";\nexport function List() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      countries = _useState2[0],\n      setCountries = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      weatherCapital = _useState4[0],\n      setWeatherCapital = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isShown = _useState6[0],\n      setIsShown = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      countrySelected = _useState8[0],\n      setCountrySelected = _useState8[1];\n\n  useEffect(function () {\n    var getCountries = function getCountries() {\n      var res, data;\n      return _regeneratorRuntime.async(function getCountries$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"http://restcountries.eu/rest/v2/all\"));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 5:\n              data = _context.sent;\n              setCountries(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getCountries();\n    console.log(\"countries\", countries[0]);\n    console.log(\"countrySelected\", countrySelected);\n    console.log(\"capitalInformation\", weatherCapital);\n  }, [isShown]);\n\n  var capitalWeather = function capitalWeather() {\n    var capitalInformation;\n    return _regeneratorRuntime.async(function capitalWeather$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(countries.name === countrySelected)) {\n              _context2.next = 6;\n              break;\n            }\n\n            console.log('country capital', countries.capital);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(Weatherapi(countries.capital));\n\n          case 4:\n            capitalInformation = _context2.sent;\n\n            if (capitalInformation.message) {\n              alert(\"sorry, retry a bit later !\");\n            } else {\n              setWeatherCapital(capitalInformation.weather[0].main);\n            }\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handlePress = function handlePress(capital) {\n    setCountrySelected(capital);\n    capitalWeather(weatherCapital);\n    console.log(\"you hit me !\");\n    Alert.alert(\"you hit me !\");\n    setIsShown(!isShown);\n  };\n\n  var renderCountrie = function renderCountrie(_ref) {\n    var item = _ref.item;\n    return React.createElement(View, {\n      style: styles.dataCountrie,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, item.name), React.createElement(View, {\n      style: styles.dataCapital,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, isShown && React.createElement(React.Fragment, null, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, item.capital), React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"-\"), React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, weatherCapital))), React.createElement(TouchableOpacity, {\n      capital: item.capital,\n      onPress: handlePress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      style: styles.countryFlag,\n      source: {\n        uri: item.flag\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    })));\n  };\n\n  return React.createElement(FlatList, {\n    style: styles.list,\n    data: countries,\n    renderItem: renderCountrie,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  list: {\n    margin: 10\n  },\n  text: {\n    marginHorizontal: 5\n  },\n  dataCountrie: {\n    marginVertical: 10\n  },\n  dataCapital: {\n    flexDirection: \"row\"\n  },\n  countryFlag: {\n    height: 50,\n    width: 100\n  }\n});","map":{"version":3,"sources":["C:/Users/delfo/OneDrive/Bureau/Konexio/digitous-react-native/list/components/List.js"],"names":["log","React","useEffect","useState","Weatherapi","List","countries","setCountries","weatherCapital","setWeatherCapital","isShown","setIsShown","countrySelected","setCountrySelected","getCountries","fetch","res","json","data","console","capitalWeather","name","capital","capitalInformation","message","alert","weather","main","handlePress","Alert","renderCountrie","item","styles","dataCountrie","dataCapital","text","countryFlag","uri","flag","list","index","toString","StyleSheet","create","margin","marginHorizontal","marginVertical","flexDirection","height","width"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,OAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;AAEA,OAAOC,UAAP;AAEA,OAAO,SAASC,IAAT,GAAgB;AAAA;;AACnB,kBAAkCF,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA4CJ,QAAQ,CAAC,EAAD,CAApD;AAAA;AAAA,MAAOK,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,mBAA8BN,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOO,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA8CR,QAAQ,CAAC,EAAD,CAAtD;AAAA;AAAA,MAAOS,eAAP;AAAA,MAAwBC,kBAAxB;;AAGAX,EAAAA,SAAS,CAAC,YAAI;AAEV,QAAMY,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACCC,KAAK,CAAC,qCAAD,CADN;;AAAA;AACXC,cAAAA,GADW;AAAA;AAAA,+CAEEA,GAAG,CAACC,IAAJ,EAFF;;AAAA;AAEXC,cAAAA,IAFW;AAGjBX,cAAAA,YAAY,CAACW,IAAD,CAAZ;;AAHiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArB;;AAOAJ,IAAAA,YAAY;AAEZK,IAAAA,OAAO,CAACnB,GAAR,CAAY,WAAZ,EAAwBM,SAAS,CAAC,CAAD,CAAjC;AACAa,IAAAA,OAAO,CAACnB,GAAR,CAAY,iBAAZ,EAA+BY,eAA/B;AACAO,IAAAA,OAAO,CAACnB,GAAR,CAAY,oBAAZ,EAAkCQ,cAAlC;AAEH,GAfQ,EAeP,CAACE,OAAD,CAfO,CAAT;;AAkBA,MAAMU,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACfd,SAAS,CAACe,IAAV,KAAmBT,eADJ;AAAA;AAAA;AAAA;;AAEfO,YAAAA,OAAO,CAACnB,GAAR,CAAY,iBAAZ,EAAgCM,SAAS,CAACgB,OAA1C;AAFe;AAAA,6CAGkBlB,UAAU,CAACE,SAAS,CAACgB,OAAX,CAH5B;;AAAA;AAGTC,YAAAA,kBAHS;;AAIf,gBAAIA,kBAAkB,CAACC,OAAvB,EAAgC;AAC5BC,cAAAA,KAAK,CAAC,4BAAD,CAAL;AACH,aAFD,MAEO;AACHhB,cAAAA,iBAAiB,CAACc,kBAAkB,CAACG,OAAnB,CAA2B,CAA3B,EAA8BC,IAA/B,CAAjB;AACH;;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAYA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACN,OAAD,EAAY;AAC5BT,IAAAA,kBAAkB,CAACS,OAAD,CAAlB;AACAF,IAAAA,cAAc,CAACZ,cAAD,CAAd;AACAW,IAAAA,OAAO,CAACnB,GAAR,CAAY,cAAZ;AACA6B,IAAAA,KAAK,CAACJ,KAAN,CAAY,cAAZ;AACAd,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAND;;AAQA,MAAMoB,cAAc,GAAG,SAAjBA,cAAiB,OAAW;AAAA,QAATC,IAAS,QAATA,IAAS;AAC9B,WACA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,IAAI,CAACV,IAAZ,CADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEW,MAAM,CAACE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKxB,OAAO,IAAI,0CACR,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEsB,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BJ,IAAI,CAACT,OAAhC,CADQ,EAER,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEU,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFQ,EAGR,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B3B,cAA3B,CAHQ,CADhB,CAFJ,EASI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAEuB,IAAI,CAACT,OAAhC;AAAyC,MAAA,OAAO,EAAEM,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEI,MAAM,CAACI,WAArB;AAAkC,MAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAEN,IAAI,CAACO;AAAX,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CATJ,CADA;AAeH,GAhBD;;AAkBA,SACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,MAAM,CAACO,IAAxB;AAA8B,IAAA,IAAI,EAAEjC,SAApC;AAA+C,IAAA,UAAU,EAAEwB,cAA3D;AAA2E,IAAA,YAAY,EAAE,sBAACC,IAAD,EAAOS,KAAP;AAAA,aAAgBA,KAAK,CAACC,QAAN,EAAhB;AAAA,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH;AAED,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,IAAI,EAAC;AACDK,IAAAA,MAAM,EAAE;AADP,GADwB;AAI7BT,EAAAA,IAAI,EAAC;AACDU,IAAAA,gBAAgB,EAAE;AADjB,GAJwB;AAO7BZ,EAAAA,YAAY,EAAC;AACTa,IAAAA,cAAc,EAAE;AADP,GAPgB;AAU7BZ,EAAAA,WAAW,EAAC;AACTa,IAAAA,aAAa,EAAE;AADN,GAViB;AAa7BX,EAAAA,WAAW,EAAC;AACRY,IAAAA,MAAM,EAAE,EADA;AAERC,IAAAA,KAAK,EAAE;AAFC;AAbiB,CAAlB,CAAf","sourcesContent":["import { log } from 'async';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { FlatList, Text, StyleSheet, Image, View, Alert, TouchableOpacity } from 'react-native';\r\nimport Weatherapi from './WeatherApi';\r\n\r\nexport function List() {\r\n    const [countries, setCountries] = useState([])\r\n    const [weatherCapital, setWeatherCapital] = useState([])\r\n    const [isShown, setIsShown] = useState(false)\r\n    const [countrySelected, setCountrySelected] = useState(\"\")\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        const getCountries = async() =>{\r\n            const res = await fetch(\"http://restcountries.eu/rest/v2/all\");\r\n            const data = await res.json();\r\n            setCountries(data)\r\n\r\n            \r\n        }\r\n        getCountries();\r\n        \r\n        console.log(\"countries\",countries[0]);\r\n        console.log(\"countrySelected\", countrySelected);\r\n        console.log(\"capitalInformation\", weatherCapital);\r\n\r\n    },[isShown])\r\n    \r\n\r\n    const capitalWeather = async() => {\r\n        if (countries.name === countrySelected){\r\n            console.log('country capital' , countries.capital);\r\n            const capitalInformation = await Weatherapi(countries.capital);\r\n            if (capitalInformation.message) {\r\n                alert(\"sorry, retry a bit later !\")\r\n            } else {\r\n                setWeatherCapital(capitalInformation.weather[0].main)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePress = (capital) =>{\r\n        setCountrySelected(capital)\r\n        capitalWeather(weatherCapital)\r\n        console.log(\"you hit me !\")\r\n        Alert.alert(\"you hit me !\")\r\n        setIsShown(!isShown)\r\n    };\r\n\r\n    const renderCountrie = ({item}) =>{ \r\n        return (\r\n        <View style={styles.dataCountrie}>\r\n            <Text>{item.name}</Text>\r\n            <View style={styles.dataCapital}>\r\n                {isShown && <>\r\n                    <Text style={styles.text}>{item.capital}</Text>\r\n                    <Text style={styles.text}>-</Text>\r\n                    <Text style={styles.text}>{weatherCapital}</Text>\r\n                </>}\r\n            </View>\r\n            <TouchableOpacity capital={item.capital} onPress={handlePress}>\r\n                <Image style={styles.countryFlag} source={{uri: item.flag}} />\r\n            </TouchableOpacity>\r\n\r\n        </View>)\r\n    }\r\n\r\n    return (\r\n        <FlatList style={styles.list} data={countries} renderItem={renderCountrie} keyExtractor={(item, index)=> index.toString()}/>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    list:{\r\n        margin: 10,\r\n    },\r\n    text:{\r\n        marginHorizontal: 5,\r\n    },\r\n    dataCountrie:{\r\n        marginVertical: 10,\r\n    },\r\n    dataCapital:{\r\n       flexDirection: \"row\" ,\r\n    },\r\n    countryFlag:{\r\n        height: 50,\r\n        width: 100,\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}